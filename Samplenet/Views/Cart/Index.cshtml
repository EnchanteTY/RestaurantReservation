@model RestaurantReservation.WebUI.ViewModels.DishIndexViewModel
@using RestaurantReservation.BL.Entities

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Your order</h2>

@if (Model.CartLines.Count() > 0)
{
    
        using (Html.BeginForm("UpdateCart", "Cart"))
        {
            @Html.AntiForgeryToken();
          
           
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <td>Dish</td>
                        <td>Table</td>
                        <td>Size</td>
                        <td>Subtotal</td>
                    </tr>
                  

                </thead>
                <tbody>
                   
                        @for (int i = 0; i < Model.CartLines.Count(); i++)
                        {
                         <tr>
                            @Html.HiddenFor(id => Model.CartLines[i].DishId)
                            @Html.HiddenFor(standardPrice => Model.CartLines[i].Dish.StandardPrice)
                            <td>
                                 @Model.CartLines[i].Dish.Name 
                                 <a class="btn btn-danger pull-right" href="@Url.Action("RemoveLine", new { id =   @Model.CartLines[i].Dish.DishID })">Remove</a>
                            </td>
              
                            <td>@Html.DropDownListFor(table=> Model.CartLines[i].Table,
                                       Enumerable.Range(1, 10).
                                       Select(a => new SelectListItem
                                       { Text = a.ToString(), Value = a.ToString() ,Selected=(a==Model.CartLines[i].Table)}))
                            </td>
                            <td>
                                @Html.EnumDropDownListFor(size => Model.CartLines[i].DishSize)
                            </td>
                            <td>

                                @Model.CartLines[i].CalculatePriceForDish(@Model.CartLines[i].Table,
                                 @Model.CartLines[i].DishSize, @Model.CartLines[i].Dish.StandardPrice).ToString("c")
                            </td>
                           
                         </tr>
             
                         }
                    
                         <tr>
                             <td colspan="4" class="text-right"> 
                                 <strong>
                                     Total:     @Model.Cart.ComputeTotalValue().ToString("c")
                                 </strong>
                               
                            </td>

                         </tr>
                </tbody>
            </table>

            <input class="btn btn-sm btn-default cartButton" type="submit" value="Update Cart" />
            <p>***Remember to update the cart when you change the table or dish size.</p>

    }



}


else
{
    <p>Your Basket is empty</p>
}



<div class="pull-right">
    <a href="@Url.Action("List","Dish")" class="btn btn-default cartButton"> Continue Ordering</a>
    <a href="@Url.Action("Checkout","Checkout")" class="btn btn-default cartButton pull-right">Checkout </a>
</div>

 